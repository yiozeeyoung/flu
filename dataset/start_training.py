#!/usr/bin/env python3
"""
🚀 大规模分子坐标预测训练 - 一键启动
"""

print("""
██████╗ ███╗   ███╗ ██████╗ ██╗     ███████╗ ██████╗██╗   ██╗██╗      █████╗ ██████╗ 
██╔══██╗████╗ ████║██╔═══██╗██║     ██╔════╝██╔════╝██║   ██║██║     ██╔══██╗██╔══██╗
██║  ██║██╔████╔██║██║   ██║██║     █████╗  ██║     ██║   ██║██║     ███████║██████╔╝
██║  ██║██║╚██╔╝██║██║   ██║██║     ██╔══╝  ██║     ██║   ██║██║     ██╔══██║██╔══██╗
██████╔╝██║ ╚═╝ ██║╚██████╔╝███████╗███████╗╚██████╗╚██████╔╝███████╗██║  ██║██║  ██║
╚═════╝ ╚═╝     ╚═╝ ╚═════╝ ╚══════╝╚══════╝ ╚═════╝ ╚═════╝ ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝

     🧬 3D分子坐标预测 - 基于FairChem数据集和PyTorch Geometric
""")

import sys
import os

def main():
    try:
        # 运行配置选择器
        exec(open('train_configurator.py').read())
    except FileNotFoundError:
        print("❌ 错误: 找不到 train_configurator.py")
        print("请确保所有文件都在正确位置")
    except KeyboardInterrupt:
        print("\n👋 用户取消操作")
    except Exception as e:
        print(f"❌ 发生错误: {e}")
        print("请检查环境配置和依赖安装")

if __name__ == "__main__":
    main()
